<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ku0OHsMxAAAAAElFTkSuQmCC
</value>
  </data>
</root>