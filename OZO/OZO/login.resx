<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>